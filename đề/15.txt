1. (2 điểm) Hiển thị tỷ lệ giữa giá trị độ cao và độ rông của ảnh I.
2. (4 điểm) Hiệu chỉnh lại ảnh I với size mới là độ cao 256, ảnh giữ nguyên tỷ lệ so với ảnh gốc, được ảnh mới I2. Hiển thị ảnh I2.
3. (1 điểm) Chuyển đôi ảnh I sang ảnh HSV được ma trận ảnh Ihsv. Hiển thị kênh S của ảnh Ihsv.
4. (1.5 điểm) Làm trơn kênh S của ảnh Ihsv với bộ lọc median kích thước cửa sổ 3x3. Biến đổi ngược ảnh Ihsv về biểu diễn mầu RGB được ảnh I3. Hiển thị ảnh I3.
5. (1.5 điểm) Cân bằng histogram của  kênh S của ảnh Ihsv. Biến đổi ngược ảnh Ihsv về biểu diễn mầu RGB được ảnh I4. Hiển thị ảnh I4.

import cv2
import numpy as np

# 1. (2 điểm) Hiển thị tỷ lệ giữa giá trị độ cao và độ rông của ảnh I.
I = cv2.imread("I04.jpg")
cv2.imshow("Anh I04", I)
h = I.shape[1]
w = I.shape[0]
print("Tỉ le: ", h/w)

# 2. (4 điểm) Hiệu chỉnh lại ảnh I với size mới là độ cao 256, ảnh giữ nguyên tỷ lệ so với ảnh gốc,
# được ảnh mới I2. Hiển thị ảnh I2.
hnew = h - 128
wnew = (w * hnew)//h
I2 = cv2.resize(I, (hnew,wnew))
cv2.imshow("Anh I2",I2)

# 3. (1 điểm) Chuyển đôi ảnh I sang ảnh HSV được ma trận ảnh Ihsv. Hiển thị kênh S của ảnh Ihsv.
Ihsv = cv2.cvtColor(I, cv2.COLOR_BGR2HSV)
cv2.imshow("Kenh S cua anh Ihsv", Ihsv[:,:,1])

# 4. (1.5 điểm) Làm trơn kênh S của ảnh Ihsv với bộ lọc median kích thước cửa sổ 3x3.
# Biến đổi ngược ảnh Ihsv về biểu diễn mầu RGB được ảnh I3. Hiển thị ảnh I3.
median = cv2.medianBlur(Ihsv,3)
cv2.imshow("Anh loc",median)
I3 = cv2.cvtColor(Ihsv, cv2.COLOR_HSV2BGR)
cv2.imshow("Anh I3", I3)

# 5. (1.5 điểm) Cân bằng histogram của  kênh S của ảnh Ihsv.
# Biến đổi ngược ảnh Ihsv về biểu diễn mầu RGB được ảnh I4. Hiển thị ảnh I4.
Ihsv_Hist = cv2.equalizeHist(Ihsv[:,:,1])
I4 = cv2.cvtColor(Ihsv, cv2.COLOR_HSV2BGR)
cv2.imshow("Anh I4", I4)

cv2.waitKey(0)

